<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structmanif_1_1_s_e2" kind="struct" language="C++" prot="public">
    <compoundname>manif::SE2</compoundname>
    <basecompoundref refid="structmanif_1_1_s_e2_base" prot="public" virt="non-virtual">manif::SE2Base&lt; SE2&lt; _Scalar &gt; &gt;</basecompoundref>
    <includes refid="impl_2se2_2_s_e2_8h" local="no">SE2.h</includes>
    <templateparamlist>
      <param>
        <type>typename _Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structmanif_1_1_s_e2_1adbb4e426a468319fae4630d12f5e1f0f" prot="private" static="no">
        <type><ref refid="structmanif_1_1_s_e2_base" kindref="compound">SE2Base</ref>&lt; <ref refid="structmanif_1_1_s_e2" kindref="compound">SE2</ref>&lt; _Scalar &gt; &gt;</type>
        <definition>using manif::SE2&lt; _Scalar &gt;::Base =  SE2Base&lt;SE2&lt;_Scalar&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="56" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_e2_1adc322d71463bc8a2ead57d175956af3f" prot="private" static="no">
        <type><ref refid="structmanif_1_1_s_e2" kindref="compound">SE2</ref>&lt; _Scalar &gt;</type>
        <definition>using manif::SE2&lt; _Scalar &gt;::Type =  SE2&lt;_Scalar&gt;</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="57" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structmanif_1_1_s_e2_1aa8c46370f1c02a05f47a6bd911e424d4" prot="public" static="no">
        <type>typename Base::Translation</type>
        <definition>using manif::SE2&lt; _Scalar &gt;::Translation =  typename Base::Translation</definition>
        <argsstring></argsstring>
        <name>Translation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="68" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structmanif_1_1_s_e2_1a21395a579962bee3a415129b4e6d0b4b" prot="protected" static="no" mutable="no">
        <type>DataType</type>
        <definition>DataType manif::SE2&lt; _Scalar &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
<para>Underlying data (Eigen) vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="159" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmanif_1_1_s_e2_1afcae5986c54dd55c6277f5ab4697c3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>()=default</argsstring>
        <name>SE2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="74" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a6e9ccb15a674b60c69bc27a044f8b95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::~SE2</definition>
        <argsstring>()=default</argsstring>
        <name>~SE2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="75" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a6f6a61aeb6b8d2e022f95fed51d5fdd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const LieGroupBase&lt; _DerivedOther &gt; &amp;o)</argsstring>
        <name>SE2</name>
        <param>
          <type>const <ref refid="structmanif_1_1_lie_group_base" kindref="compound">LieGroupBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="82" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a6fb23d13048eca08a7d3d19b9ad2c774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Translation &amp;t, const std::complex&lt; Scalar &gt; &amp;c)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Translation &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const std::complex&lt; Scalar &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructor given a translation and a unit complex number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>A translation vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>A complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="structmanif_1_1invalid__argument" kindref="compound">manif::invalid_argument</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on un-normalized complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="92" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1acabbe408965e28b00b7c360362c7eca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Scalar x, const Scalar y, const Scalar theta)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Scalar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>Constructor given the x and y components of the translational part and an angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>An angle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="101" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a85767068f5e4c85be5813d66f66d5587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Scalar x, const Scalar y, const Scalar real, const Scalar imag)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Scalar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>real</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>imag</declname>
        </param>
        <briefdescription>
<para>Constructor given the x and y components of the translational part and the real and imaginary part of a unit complex number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">real</parametername>
</parameternamelist>
<parameterdescription>
<para>The real of a unitary complex number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">imag</parametername>
</parameternamelist>
<parameterdescription>
<para>The imaginary of a unitary complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="structmanif_1_1invalid__argument" kindref="compound">manif::invalid_argument</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on un-normalized complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="112" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1a256f1d4283cc9faa02c08c43fc3f7bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Scalar x, const Scalar y, const std::complex&lt; Scalar &gt; &amp;c)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Scalar</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const std::complex&lt; Scalar &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructor given the x and y components of the translational part and the real and imaginary part of a unit complex number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-components of the translational part. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>The unitary complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="structmanif_1_1invalid__argument" kindref="compound">manif::invalid_argument</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on un-normalized complex number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="122" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1abf406b849fcfb11f67bbdbf15b74c0cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>manif::SE2&lt; _Scalar &gt;::SE2</definition>
        <argsstring>(const Eigen::Transform&lt; _Scalar, 2, Eigen::Isometry &gt; &amp;h)</argsstring>
        <name>SE2</name>
        <param>
          <type>const Eigen::Transform&lt; _Scalar, 2, Eigen::Isometry &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Constructor from a 2D Eigen::Isometry&lt;Scalar&gt; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>an isometry object from Eigen</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Isometry is a typedef from Eigen::Transform, in which the linear part is assumed a rotation matrix. This is used to speed up certain methods of Transform, especially <ref refid="structmanif_1_1_s_e2_base_1a385578d24aaec3aa8dee95dc1709a6f2" kindref="member">inverse()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="132" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1aff34005e83bcf5ca5732fe7e98bfb283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DataType &amp;</type>
        <definition>SE2&lt; _Scalar &gt;::DataType &amp; manif::SE2&lt; _Scalar &gt;::coeffs</definition>
        <argsstring>()</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">a</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the underlying Eigen vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="140" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_e2_1adfd50e4662a248f7a32a53c198defb87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const DataType &amp;</type>
        <definition>const SE2&lt; _Scalar &gt;::DataType &amp; manif::SE2&lt; _Scalar &gt;::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">a</parametername>
</parameternamelist>
<parameterdescription>
<para>const reference to the underlying Eigen vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="146" column="18" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="219" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an element of <ref refid="structmanif_1_1_s_e2" kindref="compound">SE2</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>manif::SE2&lt; _Scalar &gt;</label>
        <link refid="structmanif_1_1_s_e2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::SE2Base&lt; SE2&lt; _Scalar &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e2_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>manif::SE2&lt; _Scalar &gt;</label>
        <link refid="structmanif_1_1_s_e2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::SE2Base&lt; SE2&lt; _Scalar &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e2_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" line="52" column="1" bodyfile="/home/runner/work/manif/manif/include/manif/impl/se2/SE2.h" bodystart="53" bodyend="160"/>
    <listofallmembers>
      <member refid="structmanif_1_1_lie_group_base_1a7fe44175f7ad70476c640d4745d7c6c9" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>_</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a32216d574fa5bd8bf0f29f41dcda571d" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>act</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a88af7f6d682384803c7c2a3ee8367ab3" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>act</name></member>
      <member refid="structmanif_1_1_lie_group_base_1adc60eaf39fd497125f94e7b437f5d86f" prot="public" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>manif::SE2</scope><name>act</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a0d11125c66e139dfcde4881162ac5d40" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>adj</name></member>
      <member refid="structmanif_1_1_s_e2_base_1abe394534d27c689b8487a92a4751c9a8" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>angle</name></member>
      <member refid="structmanif_1_1_s_e2_1adbb4e426a468319fae4630d12f5e1f0f" prot="private" virt="non-virtual"><scope>manif::SE2</scope><name>Base</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7351c9a0e8fe51c72978626efa12d97c" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>between</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad0db8fc1317d2ea0f6f210a6b274ec88" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>cast</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0ef0052589be75ef70ca7770cf73def7" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>cast</name></member>
      <member refid="structmanif_1_1_s_e2_1aff34005e83bcf5ca5732fe7e98bfb283" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_e2_1adfd50e4662a248f7a32a53c198defb87" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a4e738fe12f6a41d07137ae3fbc5d1e84" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>compose</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7d766d75afce68d88e7b83108b1bde3d" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>data</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a58250b5749c58fe57a7ecd14c4009dd0" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>data</name></member>
      <member refid="structmanif_1_1_s_e2_1a21395a579962bee3a415129b4e6d0b4b" prot="protected" virt="non-virtual"><scope>manif::SE2</scope><name>data_</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a59562d75de51334eab68426521a4e923" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>DataType</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual"><scope>manif::SE2</scope><name>derived</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual"><scope>manif::SE2</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>manif::SE2</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>manif::SE2</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a42a00de7f4c6ae7e8a11568dfd4a43a8" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Dim</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a613898f9799c5317567b33a1fabe726e" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>DoF</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a34a63b85f977cb40012be342f902404a" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Identity</name></member>
      <member refid="structmanif_1_1_s_e2_base_1acfd8f5c0e9560a858efb109972da3aee" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>imag</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a385578d24aaec3aa8dee95dc1709a6f2" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>inverse</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac4d00c4834b1415eef9fb7a14dc8f708" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>isApprox</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a79e9cf50ee1a768723a99261fe352cd7" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>isometry</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a27a0e8d5f108482f4301d10955493454" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Isometry</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac02491bfe309ff4a384ca4394f153d6c" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Jacobian</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1f015474f257f800bcd826787b26bcfc" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>LieGroup</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a536b5307a15fd40b0e5eb87c0344d6a8" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>LieGroupTemplate</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a830f657dbefe76b6dd4a9e201b05767b" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>lift</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aef8d336d81a657e541e5ff48e5a08b1c" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>lminus</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a315b35a56e7c9fd42c9cc19cac99bb90" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>log</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6af777d6c8914c59ce88a76db6f4775" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>lplus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3912f9ef389576c9038ce2d544b4b833" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>minus</name></member>
      <member refid="structmanif_1_1_s_e2_base_1aaaf84b864aed1216108b0aba676f476e" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>normalize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a4e49d3cf3538e03ff7d19c1602da19cc" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator*</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a019031c758bfb21a7030cd97843d4b4d" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator*=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1a497184154ab95cc4cc4d14eb07c513" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator+</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a3e11651c59644d8f5f3705d0b257de" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator+=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1af59dd9dc829de8f8f49ecf4bee27fedd" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator-</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac411dc1b8a4456a3bae4afd152abddaa" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab3b5b3153e4d50982f9f71d104c8c37f" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2b270c001e289786a499d76d886a5869" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a5d68ac830a6191abb32eccc874612bef" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>operator==</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9e323b97f09981a2b0d1973f8d81b21b" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>OptJacobianRef</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a74d5760f793fbfdeec248b34b3360d1c" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>plus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0c1def597571453671f7762c4e511e05" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Random</name></member>
      <member refid="structmanif_1_1_s_e2_base_1aa0f3397fc51c0ec9e9216a0f61e7647b" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>real</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a229272dd86ff795a11848855b7072b20" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>RepSize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6c5f9dc430ca6b0ff1eb5cc58c9faed" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>rminus</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a2a4c07bb3559cf744d7fe08d55f174e7" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>rotation</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a149f54a7047c39e533ad7dddd6fa3d0a" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Rotation</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a36d6106e38cd7fac46510e6458a119" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>rplus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7215753f62eaeced0a3c8f53147938e3" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Scalar</name></member>
      <member refid="structmanif_1_1_s_e2_1afcae5986c54dd55c6277f5ab4697c3ea" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a6f6a61aeb6b8d2e022f95fed51d5fdd5" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a6fb23d13048eca08a7d3d19b9ad2c774" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1acabbe408965e28b00b7c360362c7eca1" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a85767068f5e4c85be5813d66f66d5587" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1a256f1d4283cc9faa02c08c43fc3f7bb1" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_s_e2_1abf406b849fcfb11f67bbdbf15b74c0cc" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>SE2</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aa154961cb80b013d3d1d66132e487f33" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>setIdentity</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3d9dc0ea239fa48ca9d75d11e08e020d" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>setRandom</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab920e7e67b4e174ad7e291cd10945827" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Tangent</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a57077d9e099ebadedb7453dfb6430ba6" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>transform</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a5e9903214f592acaa597a11a0102cfae" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Transformation</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a0f22dc835383d7a7822c6c5cc9f9c2bb" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>translation</name></member>
      <member refid="structmanif_1_1_s_e2_1aa8c46370f1c02a05f47a6bd911e424d4" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Translation</name></member>
      <member refid="structmanif_1_1_s_e2_1adc322d71463bc8a2ead57d175956af3f" prot="private" virt="non-virtual"><scope>manif::SE2</scope><name>Type</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aefcb523771afb5c59a70fb2d869598eb" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>Vector</name></member>
      <member refid="structmanif_1_1_s_e2_base_1af519c48f07f5d8b62d3b7458a89d478c" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>x</name></member>
      <member refid="structmanif_1_1_s_e2_base_1a4f4e4e060dec2ff511ef916b3320a0b9" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>y</name></member>
      <member refid="structmanif_1_1_s_e2_1a6e9ccb15a674b60c69bc27a044f8b95f" prot="public" virt="non-virtual"><scope>manif::SE2</scope><name>~SE2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
