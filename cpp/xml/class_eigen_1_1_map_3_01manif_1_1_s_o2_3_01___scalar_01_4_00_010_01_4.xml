<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4" kind="class" language="C++" prot="public">
    <compoundname>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</compoundname>
    <basecompoundref refid="structmanif_1_1_s_o2_base" prot="public" virt="non-virtual">manif::SO2Base&lt; Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt; &gt;</basecompoundref>
    <includes refid="_s_o2__map_8h" local="no">SO2_map.h</includes>
    <templateparamlist>
      <param>
        <type>class _Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1af07cdb0f3f417207be9415654bfa1871" prot="private" static="no">
        <type><ref refid="structmanif_1_1_s_o2_base" kindref="compound">manif::SO2Base</ref>&lt; Map&lt; <ref refid="structmanif_1_1_s_o2" kindref="compound">manif::SO2</ref>&lt; _Scalar &gt;, 0 &gt; &gt;</type>
        <definition>using Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;::Base =  manif::SO2Base&lt;Map&lt;manif::SO2&lt;_Scalar&gt;, 0&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" line="43" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1a1c19a6ec85d582a0713cbd4730d9021d" prot="protected" static="no" mutable="no">
        <type>DataType</type>
        <definition>DataType Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" line="61" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1afd7d88838c8dc6e01a9b8b5488aca321" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;::Map</definition>
        <argsstring>(Scalar *coeffs)</argsstring>
        <name>Map</name>
        <param>
          <type>Scalar *</type>
          <declname>coeffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" line="52" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1a955da775d574dd13ca8958060c43c9b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DataType &amp;</type>
        <definition>DataType&amp; Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;::coeffs</definition>
        <argsstring>()</argsstring>
        <name>coeffs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" line="56" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1a706928a6bd107cda62252589a0594a5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const DataType &amp;</type>
        <definition>const DataType&amp; Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" line="57" column="18" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" bodystart="57" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specialization of Map for <ref refid="structmanif_1_1_s_o2" kindref="compound">manif::SO2</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>manif::SO2Base&lt; Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_o2_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>manif::SO2Base&lt; Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_o2_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" line="40" column="1" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so2/SO2_map.h" bodystart="42" bodyend="62"/>
    <listofallmembers>
      <member refid="structmanif_1_1_lie_group_base_1a7fe44175f7ad70476c640d4745d7c6c9" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>_</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a64005c1b4a954f9904505f64ae26e599" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>act</name></member>
      <member refid="structmanif_1_1_s_o2_base_1af621d80593f003e58927c365d2bac9a3" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>act</name></member>
      <member refid="structmanif_1_1_lie_group_base_1adc60eaf39fd497125f94e7b437f5d86f" prot="public" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>act</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a2e1bf3f1a99df984c4ce3b00da69c643" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>adj</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a9fb166112c866af02ff2dd8027ef554a" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>angle</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1af07cdb0f3f417207be9415654bfa1871" prot="private" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Base</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7351c9a0e8fe51c72978626efa12d97c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>between</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad0db8fc1317d2ea0f6f210a6b274ec88" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>cast</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0ef0052589be75ef70ca7770cf73def7" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>cast</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1a955da775d574dd13ca8958060c43c9b2" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>coeffs</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1a706928a6bd107cda62252589a0594a5f" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_o2_base_1aa494d786626efe695e75fa77d1c93215" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>compose</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7d766d75afce68d88e7b83108b1bde3d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>data</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a58250b5749c58fe57a7ecd14c4009dd0" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>data</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1a1c19a6ec85d582a0713cbd4730d9021d" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>data_</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a59562d75de51334eab68426521a4e923" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>DataType</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a42a00de7f4c6ae7e8a11568dfd4a43a8" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Dim</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a613898f9799c5317567b33a1fabe726e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>DoF</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a34a63b85f977cb40012be342f902404a" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Identity</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a7b12dfd74ed5e918add5d7602ac4e84e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>imag</name></member>
      <member refid="structmanif_1_1_s_o2_base_1aa219332ae988e2960537e24fc9712339" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>inverse</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac4d00c4834b1415eef9fb7a14dc8f708" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>isApprox</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac02491bfe309ff4a384ca4394f153d6c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Jacobian</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1f015474f257f800bcd826787b26bcfc" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>LieGroup</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a536b5307a15fd40b0e5eb87c0344d6a8" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>LieGroupTemplate</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a3b6d8ec4746f36d8d4dece9499193d2e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>lift</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aef8d336d81a657e541e5ff48e5a08b1c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>lminus</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a5cb80ea50d86a215838e7fe1f9457ec8" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>log</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6af777d6c8914c59ce88a76db6f4775" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>lplus</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_s_o2_3_01___scalar_01_4_00_010_01_4_1afd7d88838c8dc6e01a9b8b5488aca321" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Map</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3912f9ef389576c9038ce2d544b4b833" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>minus</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a928a2b3585f96233645faf55bd25061e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>normalize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a4e49d3cf3538e03ff7d19c1602da19cc" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator*</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a019031c758bfb21a7030cd97843d4b4d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator*=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1a497184154ab95cc4cc4d14eb07c513" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator+</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a3e11651c59644d8f5f3705d0b257de" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator+=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1af59dd9dc829de8f8f49ecf4bee27fedd" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator-</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac411dc1b8a4456a3bae4afd152abddaa" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab3b5b3153e4d50982f9f71d104c8c37f" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2b270c001e289786a499d76d886a5869" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a5d68ac830a6191abb32eccc874612bef" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>operator==</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9e323b97f09981a2b0d1973f8d81b21b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>OptJacobianRef</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a74d5760f793fbfdeec248b34b3360d1c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>plus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0c1def597571453671f7762c4e511e05" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Random</name></member>
      <member refid="structmanif_1_1_s_o2_base_1abf21956540d210cc3f21203e2d271430" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>real</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a229272dd86ff795a11848855b7072b20" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>RepSize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6c5f9dc430ca6b0ff1eb5cc58c9faed" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>rminus</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a91f748c9d1f7f3a060c77732cb11494a" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>rotation</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a579ed6c968969e0c1f8e3484e14f1787" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Rotation</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a36d6106e38cd7fac46510e6458a119" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>rplus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7215753f62eaeced0a3c8f53147938e3" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Scalar</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aa154961cb80b013d3d1d66132e487f33" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>setIdentity</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3d9dc0ea239fa48ca9d75d11e08e020d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>setRandom</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab920e7e67b4e174ad7e291cd10945827" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Tangent</name></member>
      <member refid="structmanif_1_1_s_o2_base_1a1cd0799fe942b79afb517a5c057ab3a9" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>transform</name></member>
      <member refid="structmanif_1_1_s_o2_base_1ac31aa877144ff1947eb7b1f3f1086eb3" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Transformation</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aefcb523771afb5c59a70fb2d869598eb" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::SO2&lt; _Scalar &gt;, 0 &gt;</scope><name>Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
